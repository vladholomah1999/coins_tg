"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/features/wallet/TransactionButton.tsx":
/*!**************************************************************!*\
  !*** ./src/components/features/wallet/TransactionButton.tsx ***!
  \**************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransactionButton: function() { return /* binding */ TransactionButton; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ TransactionButton auto */ \nconst TransactionButton = (param)=>{\n    let { amount, onTransaction, disabled } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: onTransaction,\n        disabled: disabled,\n        className: \"\\n      w-full py-3 rounded-lg text-white\\n      \".concat(disabled ? \"bg-gray-400\" : \"bg-blue-500 hover:bg-blue-600\", \"\\n      transition-colors\\n    \"),\n        children: [\n            \"Купити \",\n            amount,\n            \" NOT за 1 TON\"\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\SunStride\\\\OneDrive\\\\Робочий стіл\\\\telegram-mining-app\\\\src\\\\components\\\\features\\\\wallet\\\\TransactionButton.tsx\",\n        lineNumber: 14,\n        columnNumber: 3\n    }, undefined);\n};\n_c = TransactionButton;\nvar _c;\n$RefreshReg$(_c, \"TransactionButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2ZlYXR1cmVzL3dhbGxldC9UcmFuc2FjdGlvbkJ1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBUU8sTUFBTUEsb0JBQW9CO1FBQUMsRUFDaENDLE1BQU0sRUFDTkMsYUFBYSxFQUNiQyxRQUFRLEVBQ2U7eUJBQ3ZCLDhEQUFDQztRQUNDQyxTQUFTSDtRQUNUQyxVQUFVQTtRQUNWRyxXQUFXLG9EQUVvRCxPQUEzREgsV0FBVyxnQkFBZ0IsaUNBQWdDOztZQUdoRTtZQUNTRjtZQUFPOzs7Ozs7O0VBRWxCO0tBaEJZRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9mZWF0dXJlcy93YWxsZXQvVHJhbnNhY3Rpb25CdXR0b24udHN4P2JmZmQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcblxyXG5pbnRlcmZhY2UgVHJhbnNhY3Rpb25CdXR0b25Qcm9wcyB7XHJcbiAgYW1vdW50OiBudW1iZXJcclxuICBvblRyYW5zYWN0aW9uOiAoKSA9PiB2b2lkXHJcbiAgZGlzYWJsZWQ/OiBib29sZWFuXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBUcmFuc2FjdGlvbkJ1dHRvbiA9ICh7XHJcbiAgYW1vdW50LFxyXG4gIG9uVHJhbnNhY3Rpb24sXHJcbiAgZGlzYWJsZWRcclxufTogVHJhbnNhY3Rpb25CdXR0b25Qcm9wcykgPT4gKFxyXG4gIDxidXR0b25cclxuICAgIG9uQ2xpY2s9e29uVHJhbnNhY3Rpb259XHJcbiAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XHJcbiAgICBjbGFzc05hbWU9e2BcclxuICAgICAgdy1mdWxsIHB5LTMgcm91bmRlZC1sZyB0ZXh0LXdoaXRlXHJcbiAgICAgICR7ZGlzYWJsZWQgPyAnYmctZ3JheS00MDAnIDogJ2JnLWJsdWUtNTAwIGhvdmVyOmJnLWJsdWUtNjAwJ31cclxuICAgICAgdHJhbnNpdGlvbi1jb2xvcnNcclxuICAgIGB9XHJcbiAgPlxyXG4gICAg0JrRg9C/0LjRgtC4IHthbW91bnR9IE5PVCDQt9CwIDEgVE9OXHJcbiAgPC9idXR0b24+XHJcbikiXSwibmFtZXMiOlsiVHJhbnNhY3Rpb25CdXR0b24iLCJhbW91bnQiLCJvblRyYW5zYWN0aW9uIiwiZGlzYWJsZWQiLCJidXR0b24iLCJvbkNsaWNrIiwiY2xhc3NOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/features/wallet/TransactionButton.tsx\n"));

/***/ })

});